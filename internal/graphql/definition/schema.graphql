# Root schema definition
schema {
    query: Query
    mutation: Mutation
}

# Entry points for querying the API
type Query {
    # version represents the API server version responding to your requests.
    version: String!

    token(address: Address!, tokenId: BigInt!): Token

    tokens(first: Int, after: Cursor, last: Int, before: Cursor): TokenConnection!

}

# Mutation endpoints for modifying the data
type Mutation {
    # Load testing data into db - ONLY FOR TESTING, TO BE REMOVED FOR PRODUCTION!
    pushTestingData: String!

    # Generate login challenge, to be signed by client and passed into login mutation
    generateLoginChallenge(user: Address!): String!

    # Use signed login challenge to obtain Bearer token
    generateBearer(user: Address!, signedLoginChallenge: String!): String!
}
